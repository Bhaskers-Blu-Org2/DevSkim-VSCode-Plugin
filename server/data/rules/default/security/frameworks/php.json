[
    {
        "name": "eval for untrusted data",
        "id": "DS189439",
        "description": "If untrusted data (data from HTTP requests, user submitted files, etc.) is included in an eval statement it can allow enable an attacker to inject their own code.",
        "recommendation": "Edit the eval so that no untrusted date is included.  If untrusted data is absolutely necessary a great deal of care should be taken to ensure it is properly escaped so that it cannot be executed.  This is not as simple as just escaping quotes.",
        "applies_to": [
            "php"
        ],
        "tags": [
            "PHP.DangerousFunctionCall"
        ],
        "severity": "important",
        "_comment": "",
        "rule_info": "DS189424.md",
        "patterns": [
            {
                "pattern": "\\beval\\(([^,]+)\\)",
                "type": "regex",
                "scopes": [
                    "code"
                ],
                "_comment": ""
            }
        ],
        "conditions" : [
            {
                "lambda" : 
                {
                    "lambda_code": "() => { return true }",
                    "_comment": ""
                },
                "search_in":"finding-only",
                "negate_finding": true,
                "_comment": "" 
            }          
        ]        
    },    
    {
        "name": "$_REQUEST should be avoided",
        "id": "DS144886",
        "description": "$_REQUEST combines POST, GET, and cookie values in one array, making it easy for an attacker to modify a POST or cookie value by instead putting it in a GET and sending the URL to the victim",
        "recommendation": "Use $_POST, $_GET, $_COOKIE to scope to the expected delivery method for a value ",
        "applies_to": [
            "php"
        ],
        "tags": [
            "Implementation.PHP"
        ],
        "severity": "moderate",
        "_comment": "",
        "rule_info": "DS144886.md",
        "patterns": [
            {
                "pattern": "\\$_REQUEST",
                "type": "regex",
                "scopes": [
                    "code"
                ],
                "_comment": ""
            }
        ],
        "fix_its": [
            {
                "name": "Change to $_GET",
                "type": "regex-replace",
                "_comment": "",
                "replacement": "$_GET",
                "pattern": {
                    "pattern": "\\$_REQUEST",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                }
            },
            {
                "name": "Change to $_POST",
                "type": "regex-replace",
                "_comment": "",
                "replacement": "$_POST",
                "pattern": {
                    "pattern": "\\$_REQUEST",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                }
            },
            {
                "name": "Change to $_COOKIE",
                "type": "regex-replace",
                "_comment": "",
                "replacement": "$_COOKIE",
                "pattern": {
                    "pattern": "\\$_REQUEST",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                }
            }
        ]
    },
     {
        "name": "XSS: Do not echo unencoded GET/POST/COOKIE values",
        "id": "DS163877",
        "description": "When using $_GET/POST/COOKIE values via echo, failure to  encode the values will lead to Cross Site Scription (XSS), where a malicious party can inject script into the webpage.",
        "recommendation": "HTML Entity Encode (for content going into HTML) or URL Encode (for content going into JavaScript variables) the data",
        "applies_to": [
            "php"
        ],
        "tags": [
            "Implementation.PHP"
        ],
        "severity": "moderate",
        "_comment": "",
        "rule_info": "DS163877.md",
        "patterns": [
            {
                "pattern": "\\becho.*(\\$_(POST|GET|REQUEST|COOKIE)\\[.*\\])",
                "type": "regex",
                "scopes": [
                    "code"
                ],
                "_comment": ""
            }
        ],
        "conditions" : [
            {
                "pattern" : 
                {
                    "pattern": "\\b(htmlentities|htmlspecialchars|rawurlencode|urlencode)\\s*\\(.*(\\$_(POST|GET|REQUEST|COOKIE)\\[.*\\]).*\\)",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                },
                "search_in":"finding-only",
                "negate_finding": true,
                "_comment": "" 
            }          
        ],
        "fix_its": [
            {
                "name": "HTML Entity encode the data",
                "type": "regex-replace",
                "_comment": "",
                "replacement": "htmlentities($1)",
                "pattern": {
                    "pattern": "(\\$_(POST|GET|REQUEST|COOKIE)\\[.*\\])",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                }
            },
            {
                "name": "URL encode the data",
                "type": "regex-replace",
                "_comment": "",
                "replacement": "rawurlencode($1)",
                "pattern": {
                    "pattern": "(\\$_(POST|GET|REQUEST|COOKIE)\\[.*\\])",
                    "type": "regex",
                    "scopes": [
                        "code"
                    ],
                    "_comment": ""
                }
            }
        ]
    }
]
